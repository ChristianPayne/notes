{"/":{"title":"Christian Payne","content":"\n# Welcome!\nWorking on some notes. Hang tight while I work on this.\n\n## Jump around\n[Code References](Code%20References.md)  \n[Markdown Cheatsheet](Markdown%20Cheatsheet.md)  ","lastmodified":"2022-12-31T23:36:07.735608005Z","tags":null},"/Code-References":{"title":"","content":"# File Conversions\n[Convert ANSI to UTF-8](Convert%20ANSI%20to%20UTF-8.md) \n\n","lastmodified":"2022-12-31T23:36:07.735608005Z","tags":null},"/Convert-ANSI-to-UTF-8":{"title":"","content":"This script was created to solve the problem of AWS Glue jobs failing because our files in S3 were stored as ANSI format. Glue apparently only allows UTF-8 encoding on the files it processes.\n\nThe difference between the Mac and Windows scripts are the file path method and the encoding naming. They will do the same task, just configured for each OS.\n\n## Prerequisites\nTo run this on your machine, you will need to have python 3.x installed. No other requirements are necessary.\n\n## Usage\nThe easiest way to run this is to put the python script next to the folder that you want to run it on. \n1. Save the script as `ANSI_to_UTF8.py`\n2. Navigate to that directory and run:\n\n```\npython ANSI_to_UTF8.py \u003cfolder name\u003e\n```\n\nThe script will copy all the files into a new directory with UTF_8 encoding.\n\n## Mac\n```python\nimport sys\nimport os\n\nif len(sys.argv) != 2:\n  print(f\"Converts the contents of a folder to UTF-8 from ASCI.\")\n  print(f\"USAGE: \\n\\\n    python ANSI_to_UTF8.py \u003cRelative_Folder_Name\u003e \\n\\\n    If targeting a nested folder, make sure to use an escaped \\\\. ie: parent\\\\\\\\child\")\n  sys.exit()\n\nfrom_encoding = \"cp1252\"\nto_encoding = \"UTF-8\"\nlist_of_files = []\ncurrent_dir = os.getcwd()\nfolder = sys.argv[1]\nsuffix = \"_utf8\"\ntarget_folder = folder + \"_utf8\"\n\n\ntry:\n  os.mkdir(target_folder)\nexcept FileExistsError:\n  print(\"Target folder already exists.\")\nexcept:\n  print(\"Error making directory!\")\n\nfor root, dirs, files in os.walk(folder):\n\tfor file in files:\n\t\tlist_of_files.append(os.path.join(root,file))\n\n\nfor file in list_of_files:\n  print(f\"Converting {file}\")\n\n  original_path = file\n\n  filename = file.split(\"/\")[-1].split(\".\")[0]\n  extension = file.split(\"/\")[-1].split(\".\")[1]\n  folder = \"/\".join(original_path.split(\"/\")[0:-1])\n  new_filename = filename + \".\" + extension\n  new_path = os.path.join(target_folder, new_filename)\n\n  f= open(original_path, 'r', encoding=from_encoding)\n  content= f.read()\n  f.close()\n  f= open(new_path, 'w', encoding=to_encoding)\n  f.write(content)\n  f.close()\n\nprint(f\"Finished converting {len(list_of_files)} files to {target_folder}\")\n```\n\n## Windows\n```python\nimport sys\nimport os\n\nif len(sys.argv) != 2:\n  print(f\"Converts the contents of a folder to UTF-8 from ASCI.\")\n  print(f\"USAGE: \\n\\\n    python ANSI_to_UTF8.py \u003cRelative_Folder_Name\u003e \\n\\\n    If targeting a nested folder, make sure to use an escaped \\\\. ie: parent\\\\\\\\child\")\n  sys.exit()\n\nfrom_encoding = \"ANSI\"\nto_encoding = \"UTF-8\"\nlist_of_files = []\ncurrent_dir = os.getcwd()\nfolder = sys.argv[1]\nsuffix = \"_utf8\"\ntarget_folder = folder + \"_utf8\"\n\n\ntry:\n  os.mkdir(target_folder)\nexcept FileExistsError:\n  print(\"Target folder already exists.\")\nexcept:\n  print(\"Error making directory!\")\n\nfor root, dirs, files in os.walk(folder):\n    for file in files:\n        list_of_files.append(os.path.join(root,file))\n\n\nfor file in list_of_files:\n  print(f\"Converting {file}\")\n\n  original_path = file\n\n  filename = file.split(\"\\\\\")[-1].split(\".\")[0]\n  extension = file.split(\"\\\\\")[-1].split(\".\")[1]\n  folder = \"\\\\\".join(original_path.split(\"\\\\\")[0:-1])\n  new_filename = filename + \".\" + extension\n  new_path = os.path.join(target_folder, new_filename)\n\n  f= open(original_path, 'r', encoding=from_encoding)\n  content= f.read()\n  f.close()\n  f= open(new_path, 'w', encoding=to_encoding)\n  f.write(content)\n  f.close()\n\nprint(f\"Finished converting {len(list_of_files)} files to {target_folder}\")\n```","lastmodified":"2022-12-31T23:36:07.735608005Z","tags":null},"/Latent-Space":{"title":"Latent Space","content":"[Latent Space](https://christianpayne.substack.com/) is my newsletter where I publish about things I find useful and want to share. The intitial goal of this project was to start down the path of creating value for others to find and utilize in their own lives. \nThere will be many topics covered over the lifetime of this newletter just as there are many topics we all get into. This is more a project of following the path I find myself on.","lastmodified":"2022-12-31T23:36:07.735608005Z","tags":null},"/Markdown-Cheatsheet":{"title":"","content":"Reference: [The Markdown Guide](https://www.markdownguide.org)!\n\nThis Markdown cheat sheet provides a quick overview of all the Markdown syntax elements. It can’t cover every edge case, so if you need more information about any of these elements, refer to the reference guides for [basic syntax](https://www.markdownguide.org/basic-syntax) and [extended syntax](https://www.markdownguide.org/extended-syntax).\n\n## Basic Syntax\nThese are the elements outlined in John Gruber’s original design document. All Markdown applications support these elements.\n\n### Heading\n# H1\n\n## H2\n\n### H3\n\n### Bold  \n**bold text**\n\n### Italic  \n*italicized text*\n\n### Blockquote\n\u003e blockquote\n\n### Ordered List\n1. First item\n2. Second item\n3. Third item\n\n### Unordered List\n- First item\n- Second item\n- Third item\n\n### Code\n`code`\n\n### Horizontal Rule  \n---\n  \n### Link\n[Markdown Guide](https://www.markdownguide.org)\n\n### Image\n\n![alt text](https://www.markdownguide.org/assets/images/tux.png)\n\n## Extended Syntax\nThese elements extend the basic syntax by adding additional features. Not all Markdown applications support these elements.\n\n### Table\n| Syntax | Description |\n\n| ----------- | ----------- |\n\n| Header | Title |\n\n| Paragraph | Text |\n\n### Fenced Code Block  \n```\n\n{\n\n\"firstName\": \"John\",\n\n\"lastName\": \"Smith\",\n\n\"age\": 25\n\n}\n\n```\n\n### Footnote\nHere's a sentence with a footnote. [^1]\n\n[^1]: This is the footnote.  \n\n### Heading ID\n### My Great Heading {#custom-id}\n\n### Definition List\nterm\n\n: definition\n\n### Strikethrough\n~~The world is flat.~~\n\n### Task List\n- [x] Write the press release\n- [ ] Update the website\n- [ ] Contact the media\n\n### Emoji\n\nThat is so funny! :joy:\n(See also [Copying and Pasting Emoji](https://www.markdownguide.org/extended-syntax/#copying-and-pasting-emoji))\n\n### Highlight\nI need to highlight these ==very important words==.\n\n### Subscript\nH~2~O\n\n### Superscript  \nX^2^","lastmodified":"2022-12-31T23:36:07.735608005Z","tags":null}}