{"/":{"title":"Christian Payne","content":"\n# Welcome!\n\nWorking on some notes. Hang tight while I work on this.\n\n# Let's take a look around\n\n[Code Reference](notes/Code%20Reference.md) ","lastmodified":"2022-11-20T21:15:10.934880886Z","tags":null},"/notes/Code-Reference":{"title":"","content":"# File Conversions\n[Convert ANSI to UTF-8](notes/Convert%20ANSI%20to%20UTF-8.md)\n\n","lastmodified":"2022-11-20T21:15:10.934880886Z","tags":null},"/notes/Convert-ANSI-to-UTF-8":{"title":"","content":"This script was created to solve the problem of AWS Glue jobs failing because our files in S3 were stored as ANSI format. Glue apparently only allows UTF-8 encoding on the files it processes.\n\n# Mac\n```python\nimport sys\nimport os\n\nif len(sys.argv) != 2:\n  print(f\"Converts the contents of a folder to UTF-8 from ASCI.\")\n  print(f\"USAGE: \\n\\\n    python ANSI_to_UTF8.py \u003cRelative_Folder_Name\u003e \\n\\\n    If targeting a nested folder, make sure to use an escaped \\\\. ie: parent\\\\\\\\child\")\n  sys.exit()\n\nfrom_encoding = \"cp1252\"\nto_encoding = \"UTF-8\"\nlist_of_files = []\ncurrent_dir = os.getcwd()\nfolder = sys.argv[1]\nsuffix = \"_utf8\"\ntarget_folder = folder + \"_utf8\"\n\n\ntry:\n  os.mkdir(target_folder)\nexcept FileExistsError:\n  print(\"Target folder already exists.\")\nexcept:\n  print(\"Error making directory!\")\n\nfor root, dirs, files in os.walk(folder):\n\tfor file in files:\n\t\tlist_of_files.append(os.path.join(root,file))\n\n\nfor file in list_of_files:\n  print(f\"Converting {file}\")\n\n  original_path = file\n\n  filename = file.split(\"/\")[-1].split(\".\")[0]\n  extension = file.split(\"/\")[-1].split(\".\")[1]\n  folder = \"/\".join(original_path.split(\"/\")[0:-1])\n  new_filename = filename + \".\" + extension\n  new_path = os.path.join(target_folder, new_filename)\n\n  f= open(original_path, 'r', encoding=from_encoding)\n  content= f.read()\n  f.close()\n  f= open(new_path, 'w', encoding=to_encoding)\n  f.write(content)\n  f.close()\n\nprint(f\"Finished converting {len(list_of_files)} files to {target_folder}\")\n```\n\n# Windows\n```python\nimport sys\nimport os\n\nif len(sys.argv) != 2:\n  print(f\"Converts the contents of a folder to UTF-8 from ASCI.\")\n  print(f\"USAGE: \\n\\\n    python ANSI_to_UTF8.py \u003cRelative_Folder_Name\u003e \\n\\\n    If targeting a nested folder, make sure to use an escaped \\\\. ie: parent\\\\\\\\child\")\n  sys.exit()\n\nfrom_encoding = \"ANSI\"\nto_encoding = \"UTF-8\"\nlist_of_files = []\ncurrent_dir = os.getcwd()\nfolder = sys.argv[1]\nsuffix = \"_utf8\"\ntarget_folder = folder + \"_utf8\"\n\n\ntry:\n  os.mkdir(target_folder)\nexcept FileExistsError:\n  print(\"Target folder already exists.\")\nexcept:\n  print(\"Error making directory!\")\n\nfor root, dirs, files in os.walk(folder):\n    for file in files:\n        list_of_files.append(os.path.join(root,file))\n\n\nfor file in list_of_files:\n  print(f\"Converting {file}\")\n\n  original_path = file\n\n  filename = file.split(\"\\\\\")[-1].split(\".\")[0]\n  extension = file.split(\"\\\\\")[-1].split(\".\")[1]\n  folder = \"\\\\\".join(original_path.split(\"\\\\\")[0:-1])\n  new_filename = filename + \".\" + extension\n  new_path = os.path.join(target_folder, new_filename)\n\n  f= open(original_path, 'r', encoding=from_encoding)\n  content= f.read()\n  f.close()\n  f= open(new_path, 'w', encoding=to_encoding)\n  f.write(content)\n  f.close()\n\nprint(f\"Finished converting {len(list_of_files)} files to {target_folder}\")\n```","lastmodified":"2022-11-20T21:15:10.934880886Z","tags":null}}